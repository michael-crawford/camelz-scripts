#!/bin/bash
#
# Put Filesystem Metrics
#

#  1. Initialize Environment

zone=$(curl -s -m 60 http://169.254.169.254/latest/meta-data/placement/availability-zone)
region=${zone:: -1}
zonecode=${zone: -1}

INPUT="$(cat)"
CW_JSON_OPEN='{ "Namespace": "EFS", "MetricData" : [ '
CW_JSON_CLOSE=' ] }'
CW_JSON_METRIC=''
METRIC_COUNTER=0

for COL in 1 2 3 4 5 6; do

 COUNTER=0
 METRIC_FIELD=$COL
 DATA_FIELD=$(($COL+($COL-1)))

 while read line; do
   if [[ COUNTER -gt 0 ]]; then

     LINE=$(echo $line | tr -s ' ' )
     AWS_COMMAND="aws cloudwatch put-metric-data --region $region"
     MOD=$(( $COUNTER % 2))

     if [ $MOD -eq 1 ]; then
       METRIC_NAME=$(echo $LINE | cut -d ' ' -f $METRIC_FIELD)
     else
       METRIC_VALUE=$(echo $LINE | cut -d ' ' -f $DATA_FIELD)
     fi

     if [[ -n "$METRIC_NAME" && -n "$METRIC_VALUE" ]]; then
       INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
       CW_JSON_METRIC="$CW_JSON_METRIC { \"MetricName\": \"$METRIC_NAME\", \"Dimensions\" : [{\"Name\" : \"InstanceId\", \"Value\" : \"$INSTANCE_ID\"} ], \"Value\" : $METRIC_VALUE },"
       unset METRIC_NAME
       unset METRIC_VALUE

       METRIC_COUNTER=$((METRIC_COUNTER+1))
       if [ $METRIC_COUNTER -eq 20 ]; then
         # 20 is max metric collection size, so we have to submit here
         aws cloudwatch put-metric-data --region $region --cli-input-json "$(echo $CW_JSON_OPEN ${!CW_JSON_METRIC%?} $CW_JSON_CLOSE)"

         # reset
         METRIC_COUNTER=0
         CW_JSON_METRIC=''
       fi
     fi

     COUNTER=$((COUNTER+1))
   fi

   if [[ "$line" == "Client nfs v4:" ]]; then
     # the next line is the good stuff
     COUNTER=$((COUNTER+1))
   fi
 done <<< "$INPUT"
done

# submit whatever is left
aws cloudwatch put-metric-data --region $region --cli-input-json "$(echo $CW_JSON_OPEN ${!CW_JSON_METRIC%?} $CW_JSON_CLOSE)"
